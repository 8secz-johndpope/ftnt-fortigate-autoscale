{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "FortiGate Autoscale Solution (with Hybrid Licensing model) [in a new VPC]. This template creates a new VPC and deploys the FortiGate Autoscale and related components into it. Please see the FortiGate Autoscale documentation for more details. **WARNING** You will be billed for the FortiGate On-Demand instances and related AWS resources if you create a stack from this template.",
    "Parameters": {
        "ResourceTagPrefix": {
            "Type": "String",
            "AllowedPattern": "[0-9a-zA-Z@.#-]+",
            "MaxLength": 50,
            "ConstraintDescription": "Resource tag prefix can include numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens (-), period (.), and hash (#). Max length is 64.",
            "Description": "A prefix for tag key ResourceGroup on all resources. It's also used as the name prefix of all applicable resources. Can only contain numbers, lowercase letters, uppercase letters, ampersat(@) , hyphens (-), period (.), and hash (#). Max length is 50."
        },
        "CustomIdentifier": {
            "Type": "String",
            "Default": "fgtASG",
            "MaxLength": "10",
            "AllowedPattern": "[A-Za-z0-9]+",
            "ConstraintDescription": "must only contain uppercase and lowercase letters and numbers",
            "Description": "An alternative name prefix. This shorter version of prefix is used on a resource that Resource tag prefix cannot apply to. Must be at most 10 characters long and only contain uppercase, lowercase letters, and numbers. Max length is 10."
        },
        "S3BucketName": {
            "Type": "String",
            "AllowedPattern": "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$",
            "ConstraintDescription": "Deployment resource S3 bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-).",
            "Description": "S3 bucket name for the Deployment package. Bucket name can include numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot start or end with a hyphen (-)."
        },
        "S3KeyPrefix": {
            "Type": "String",
            "AllowedPattern": "^[0-9a-zA-Z-/]*$",
            "ConstraintDescription": "Deployment package S3 key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/).",
            "Description": "S3 key prefix for the deployment package. Key prefix can include numbers, lowercase letters, uppercase letters, hyphens (-), and forward slash (/)."
        },
        "AvailabilityZones": {
            "Description": "The list of Availability Zones to use for the subnets in the VPC. The FortiGate Autoscale solution uses two Availability Zones from your list and preserves the logical order you specify.",
            "Type": "List<AWS::EC2::AvailabilityZone::Name>"
        },
        "VpcCidr": {
            "Type": "String",
            "Default": "192.168.0.0/16",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the FortiGate Autoscale VPC."
        },
        "PublicSubnet1Cidr": {
            "Type": "String",
            "Default": "192.168.0.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the subnet located in Availability Zone 1 where the FortiGate Autoscale instances will be deployed to."
        },
        "PublicSubnet2Cidr": {
            "Type": "String",
            "Default": "192.168.1.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the subnet located in Availability Zone 2 where the FortiGate Autoscale instances will be deployed to."
        },
        "PrivateSubnet1Cidr": {
            "Type": "String",
            "Default": "192.168.2.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the private subnet located in Availability Zone 1 where it is protected by the FortiGates in public subnet in the same AZ."
        },
        "PrivateSubnet2Cidr": {
            "Type": "String",
            "Default": "192.168.3.0/24",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format.",
            "Description": "The CIDR block for the private subnet located in Availability Zone 1 where it is protected by the FortiGates in public subnet in the same AZ."
        },
        "FortiGateInstanceType": {
            "Type": "String",
            "Default": "c5.large",
            "AllowedValues": [
                "t2.small",
                "c5.large",
                "c5.xlarge",
                "c5.2xlarge",
                "c5.4xlarge",
                "c5.9xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type.",
            "Description": "Instance type to launch as FortiGate instances of PAYG and BYOL licensing models. There are t2.small and compute-optimized instances such as c4 and c5 available with different vCPU sizes and bandwidths. For more information about instance types, see https://aws.amazon.com/ec2/instance-types/"
        },
        "FortiOSVersion": {
            "Type": "String",
            "Default": "Latest (6.0.5)",
            "AllowedValues": [
                "Latest (6.0.5)",
                "FortiOS 6.0.5"
            ],
            "ConstraintDescription": "must be a valid FortiOS version from the selection.",
            "Description": "Supported FortiOS versions."
        },
        "LifecycleHookTimeout": {
            "Type": "Number",
            "Default": 480,
            "MinValue": 60,
            "MaxValue": 3600,
            "ConstraintDescription": "must be a valid number between 60 and 3600.",
            "Description": "FortiGate instance lifecycle expiry entry (in seconds). Minimum is 60. Maximum is 3600."
        },
        "FgtAsgCooldown": {
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "MaxValue": 3600,
            "ConstraintDescription": "must be a valid number between 60 and 3600.",
            "Description": "Auto Scaling group waits for the cooldown period (in seconds) to complete before resuming scaling activities. Minimum is 60. Maximum is 3600."
        },
        "FgtAsgDesiredCapacityByol": {
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "The number of FortiGate instances the BYOL auto-scaling should have at any time, also called desired capacity. Must keep at least 2 FortiGates in the group for High Availability. Minimum is 2."
        },
        "FgtAsgMinSizeByol": {
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "Minimum number of FortiGate instances in the BYOL auto-scaling. Minimum is 2."
        },
        "FgtAsgMaxSizeByol": {
            "Type": "Number",
            "Default": 2,
            "MinValue": 2,
            "ConstraintDescription": "must be a valid number not less than 2.",
            "Description": "Maximum number of FortiGate instances in the BYOL auto-scaling. Minimum is 2."
        },
        "FgtAsgDesiredCapacityPayg": {
            "Type": "Number",
            "Default": 0,
            "MinValue": 0,
            "ConstraintDescription": "must be a valid number not less than 0.",
            "Description": "The number of FortiGate instances the PAYG auto-scaling should have at any time, also called desired capacity."
        },
        "FgtAsgMinSizePayg": {
            "Type": "Number",
            "Default": 0,
            "MinValue": 0,
            "ConstraintDescription": "must be a valid number not less than 0.",
            "Description": "Minimum number of FortiGate instances in the PAYG auto-scaling."
        },
        "FgtAsgMaxSizePayg": {
            "Type": "Number",
            "Default": 0,
            "MinValue": 0,
            "ConstraintDescription": "must be a valid number not less than 0.",
            "Description": "Maximum number of FortiGate instances in the PAYG auto-scaling."
        },
        "FgtAsgHealthCheckGracePeriod": {
            "Type": "Number",
            "Default": 300,
            "MinValue": 60,
            "ConstraintDescription": "must be a valid number not less than 60.",
            "Description": "The length of time (in seconds) that Auto Scaling waits before checking an instance's health status. Minimum is 60."
        },
        "FgtAsgScaleInThreshold": {
            "Type": "Number",
            "Default": 25,
            "MinValue": 1,
            "MaxValue": 100,
            "ConstraintDescription": "must be a valid number between 1 and 100.",
            "Description": "The threshold (in percentage) for the FortiGate Auto Scaling group to scale-in (remove) 1 instance. Minimum is 1. Maximum is 100."
        },
        "FgtAsgScaleOutThreshold": {
            "Type": "Number",
            "Default": 80,
            "MinValue": 1,
            "MaxValue": 100,
            "ConstraintDescription": "must be a valid number between 1 and 100.",
            "Description": "The threshold (in percentage) for the FortiGate Auto Scaling group to scale-out (add) 1 instance. Minimum is 1. Maximum is 100."
        },
        "FortiGatePskSecret": {
            "Type": "String",
            "NoEcho": true,
            "MaxLength": "128",
            "Description": "A secret key for the FortiGate instances to securely communicate with each other. It can be of your choice of a string, such as numbers or letters or the combination of them. Max length 128."
        },
        "FortiGateAdminPort": {
            "Type": "Number",
            "Default": 8443,
            "MinValue": 1,
            "MaxValue": 65535,
            "ConstraintDescription": "must be a valid port number between 1 and 65535.",
            "Description": "A port number for FortiGate administration. Minimum is 1. Maximum is 65535. Do not use: 443, 541, 514, 703 because these are FortiGate reserved ports."
        },
        "FortiGateAdminCidr": {
            "Type": "String",
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5]){1}(\\/([0-9]|[1-2][0-9]|3[0-2]))?$",
            "ConstraintDescription": "must be a valid CIDR block format and 0.0.0.0/0 is highly not recommended.",
            "Description": "CIDR block for external admin management access. **WARNING!** 0.0.0.0/0 accepts connections from any IP address. We recommend that you use a constrained CIDR range to reduce the potential of inbound attacks from unknown IP addresses."
        },
        "KeyPairName": {
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must specify an admin access key pair for FortiGate instances.",
            "Description": "Amazon EC2 Key Pair for admin access."
        },
        "HeartBeatInterval": {
            "Type": "Number",
            "Default": 30,
            "MinValue": 30,
            "MaxValue": 90,
            "ConstraintDescription": "must be a valid number between 30 and 90.",
            "Description": "The amount of time (in seconds) for FortiGate to send a heartbeat to the Autoscale handler. Minimum is 30. Maximum is 90."
        },
        "HeartBeatLossCount": {
            "Type": "Number",
            "Default": 3,
            "MinValue": 1,
            "MaxValue": 65535,
            "ConstraintDescription": "must be a valid number between 1 and 65535.",
            "Description": "Number of consecutively lost heartbeats. When the Heartbeat Loss Count has been reached, the VM is deemed unhealthy and fail-over activities will commence."
        },
        "HeartBeatDelayAllowance": {
            "Type": "String",
            "Default": 2,
            "MinValue": 0,
            "Description": "The maximum amount of time (in seconds) for network latency acceptable in FortiGate heartbeat arriving at the Autoscale handler. Minimum is 0."
        },
        "LoadBalancingTrafficProtocol": {
            "Type": "String",
            "Default": "HTTPS",
            "AllowedValues": [
                "HTTP",
                "HTTPS",
                "TCP"
            ],
            "ConstraintDescription": "value must be chosen from the provided options.",
            "Description": "Use this protocol to load balance traffic."
        },
        "LoadBalancingTrafficPort": {
            "Type": "Number",
            "Default": 443,
            "MinValue": 1,
            "MaxValue": 65535,
            "ConstraintDescription": "must be a valid port number between 1 and 65535.",
            "Description": "Balance web service traffic over this port if the internal web-service load balancer is enabled. Minimum is 1. Maximum is 65535."
        },
        "LoadBalancingHealthCheckThreshold": {
            "Type": "Number",
            "Default": 3,
            "MinValue": 3,
            "ConstraintDescription": "must be a valid number not less than 3.",
            "Description": "The number of consecutive health check failures required before considering a FortiGate instance unhealthy. Minimum is 3."
        },
        "InternalLoadBalancingOptions": {
            "Type": "String",
            "Default": "add a new internal load balancer",
            "AllowedValues": [
                "add a new internal load balancer",
                "use a load balancer specified below",
                "do not need one"
            ],
            "ConstraintDescription": "must choose from the provided options.",
            "Description": "Add an optional pre-defined load balancer to route traffic to web service in the private subnets. You can optionally use your own one or decide to not need one."
        },
        "InternalTargetGroupHealthCheckPath": {
            "Type": "String",
            "Default": "/",
            "AllowedPattern": "^/[0-9a-zA-Z-/]*$",
            "MaxLength": 1024,
            "ConstraintDescription": "This path must begin with a '/' character, and can be at most 1024 characters in length.",
            "Description": "Optional. The destination path for health checks. This path must begin with a '/' character, and can be at most 1024 characters in length."
        },
        "InternalLoadBalancerDnsName": {
            "Type": "String",
            "Description": "(Optional) DNS Name of the Elastic Load Balancer which is used in the private subnets. Specify if only you use your own one."
        },
        "GetLicenseGracePeriod": {
            "Type": "Number",
            "Default": 600,
            "MinValue": 300,
            "ConstraintDescription": "must be a valid number not less than 60.",
            "Description": "The minimum time (in seconds) between a license is distributed and recycled to re-distribute. Minimum is 300."
        },
        "MasterElectionTimeout": {
            "Type": "Number",
            "Default": 300,
            "MinValue": 90,
            "MaxValue": 600,
            "ConstraintDescription": "must be a valid number between 90 and 600.",
            "Description": "The amount of time (in seconds) for FortiGate master election to timeout. Minimum is 30. Maximum is 90."
        }
    },
    "Conditions": {
        "GovCloudCondition": {
            "Fn::Equals": [{
                    "Ref": "AWS::Region"
                },
                "us-gov-west-1"
            ]
        },
        "HasResourceTagPrefix": {
            "Fn::Not": [{
                "Fn::Equals": [{
                        "Ref": "ResourceTagPrefix"
                    },
                    ""
                ]
            }]
        },
        "UseLatestFortiOSVersion": {
            "Fn::Equals": [{
                    "Ref": "FortiOSVersion"
                },
                "Latest (6.0.5)"
            ]
        },
        "UseLatestFortiOSVersion2": {
            "Fn::Equals": [
                "Latest (6.0.5)",
                "Latest (6.0.5)"
            ]
        }
    },
    "Resources": {
        "StackCreateNewVPC": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "AvailabilityZones": {
                        "Fn::Join": [
                            ",",
                            {
                                "Ref": "AvailabilityZones"
                            }
                        ]
                    },
                    "VpcCidr": {
                        "Ref": "VpcCidr"
                    },
                    "PublicSubnet1Cidr": {
                        "Ref": "PublicSubnet1Cidr"
                    },
                    "PublicSubnet2Cidr": {
                        "Ref": "PublicSubnet2Cidr"
                    },
                    "PrivateSubnet1Cidr": {
                        "Ref": "PrivateSubnet1Cidr"
                    },
                    "PrivateSubnet2Cidr": {
                        "Ref": "PrivateSubnet2Cidr"
                    },
                    "PairWithPrivateSubnet": "yes",
                    "ResourceTagPrefix": {
                        "Fn::If": [
                            "HasResourceTagPrefix",
                            {
                                "Fn::Join": [
                                    "-",
                                    [{
                                            "Ref": "ResourceTagPrefix"
                                        },
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        "-",
                                                        {
                                                            "Fn::Select": [
                                                                2,
                                                                {
                                                                    "Fn::Split": [
                                                                        "/",
                                                                        {
                                                                            "Ref": "AWS::StackId"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            },
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${S3BucketName}.${S3Region}.amazonaws.com/${S3KeyPrefix}templates/create-new-vpc.template",
                        {
                            "S3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            },
                            "S3BucketName": {
                                "Ref": "S3BucketName"
                            },
                            "S3KeyPrefix": {
                                "Ref": "S3KeyPrefix"
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": "5"
            }
        },
        "StackMainWorkload": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "Parameters": {
                    "S3BucketName": {
                        "Ref": "S3BucketName"
                    },
                    "S3KeyPrefix": {
                        "Ref": "S3KeyPrefix"
                    },
                    "ResourceTagPrefix": {
                        "Fn::If": [
                            "HasResourceTagPrefix",
                            {
                                "Fn::Join": [
                                    "-",
                                    [{
                                            "Ref": "ResourceTagPrefix"
                                        },
                                        {
                                            "Fn::Select": [
                                                0,
                                                {
                                                    "Fn::Split": [
                                                        "-",
                                                        {
                                                            "Fn::Select": [
                                                                2,
                                                                {
                                                                    "Fn::Split": [
                                                                        "/",
                                                                        {
                                                                            "Ref": "AWS::StackId"
                                                                        }
                                                                    ]
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                ]
                            },
                            {
                                "Fn::Select": [
                                    0,
                                    {
                                        "Fn::Split": [
                                            "-",
                                            {
                                                "Fn::Select": [
                                                    2,
                                                    {
                                                        "Fn::Split": [
                                                            "/",
                                                            {
                                                                "Ref": "AWS::StackId"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "CustomIdentifier": {
                        "Ref": "CustomIdentifier"
                    },
                    "UniqueId": {
                        "Fn::Select": [
                            0,
                            {
                                "Fn::Split": [
                                    "-",
                                    {
                                        "Fn::Select": [
                                            2,
                                            {
                                                "Fn::Split": [
                                                    "/",
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "VpcCidr": {
                        "Fn::GetAtt": [
                            "StackCreateNewVPC",
                            "Outputs.VpcCidr"
                        ]
                    },
                    "VpcId": {
                        "Fn::GetAtt": [
                            "StackCreateNewVPC",
                            "Outputs.VpcId"
                        ]
                    },
                    "PublicSubnet1": {
                        "Fn::GetAtt": [
                            "StackCreateNewVPC",
                            "Outputs.PublicSubnet1Id"
                        ]
                    },
                    "PublicSubnet2": {
                        "Fn::GetAtt": [
                            "StackCreateNewVPC",
                            "Outputs.PublicSubnet2Id"
                        ]
                    },
                    "PrivateSubnet1": {
                        "Fn::GetAtt": [
                            "StackCreateNewVPC",
                            "Outputs.PrivateSubnet1Id"
                        ]
                    },
                    "PrivateSubnet2": {
                        "Fn::GetAtt": [
                            "StackCreateNewVPC",
                            "Outputs.PrivateSubnet2Id"
                        ]
                    },
                    "PrivateSubnetRouteTable": {
                        "Fn::GetAtt": [
                            "StackCreateNewVPC",
                            "Outputs.PrivateSubnetRouteTableId"
                        ]
                    },
                    "FortiGateInstanceType": {
                        "Ref": "FortiGateInstanceType"
                    },
                    "FortiOSVersion": {
                        "Fn::If": [
                            "UseLatestFortiOSVersion",
                            "LATEST",
                            {
                                "Fn::Join": [
                                    "",
                                    {
                                        "Fn::Split": [
                                            ".",
                                            {
                                                "Fn::Select": [
                                                    1,
                                                    {
                                                        "Fn::Split": [
                                                            " ",
                                                            {
                                                                "Ref": "FortiOSVersion"
                                                            }
                                                        ]
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    },
                    "LifecycleHookTimeout": {
                        "Ref": "LifecycleHookTimeout"
                    },
                    "FgtAsgCooldown": {
                        "Ref": "FgtAsgCooldown"
                    },
                    "FgtAsgDesiredCapacityByol": {
                        "Ref": "FgtAsgDesiredCapacityByol"
                    },
                    "FgtAsgMinSizeByol": {
                        "Ref": "FgtAsgMinSizeByol"
                    },
                    "FgtAsgMaxSizeByol": {
                        "Ref": "FgtAsgMaxSizeByol"
                    },
                    "FgtAsgDesiredCapacityPayg": {
                        "Ref": "FgtAsgDesiredCapacityByol"
                    },
                    "FgtAsgMinSizePayg": {
                        "Ref": "FgtAsgMinSizeByol"
                    },
                    "FgtAsgMaxSizePayg": {
                        "Ref": "FgtAsgMaxSizeByol"
                    },
                    "FgtAsgHealthCheckGracePeriod": {
                        "Ref": "FgtAsgHealthCheckGracePeriod"
                    },
                    "FgtAsgScaleInThreshold": {
                        "Ref": "FgtAsgScaleInThreshold"
                    },
                    "FgtAsgScaleOutThreshold": {
                        "Ref": "FgtAsgScaleOutThreshold"
                    },
                    "FortiGatePskSecret": {
                        "Ref": "FortiGatePskSecret"
                    },
                    "FortiGateAdminPort": {
                        "Ref": "FortiGateAdminPort"
                    },
                    "FortiGateAdminCidr": {
                        "Ref": "FortiGateAdminCidr"
                    },
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "MasterElectionTimeout": 300,
                    "HeartBeatInterval": {
                        "Ref": "HeartBeatInterval"
                    },
                    "HeartBeatLossCount": {
                        "Ref": "HeartBeatLossCount"
                    },
                    "HeartBeatDelayAllowance": {
                        "Ref": "HeartBeatDelayAllowance"
                    },
                    "LoadBalancingTrafficProtocol": {
                        "Ref": "LoadBalancingTrafficProtocol"
                    },
                    "LoadBalancingTrafficPort": {
                        "Ref": "LoadBalancingTrafficPort"
                    },
                    "LoadBalancingHealthCheckThreshold": {
                        "Ref": "LoadBalancingHealthCheckThreshold"
                    },
                    "InternalLoadBalancingOptions": {
                        "Ref": "InternalLoadBalancingOptions"
                    },
                    "InternalTargetGroupHealthCheckPath": {
                        "Ref": "InternalTargetGroupHealthCheckPath"
                    },
                    "InternalLoadBalancerDnsName": {
                        "Ref": "InternalLoadBalancerDnsName"
                    },
                    "GetLicenseGracePeriod": {
                        "Ref": "GetLicenseGracePeriod"
                    }
                },
                "TemplateURL": {
                    "Fn::Sub": [
                        "https://${S3BucketName}.${S3Region}.amazonaws.com/${S3KeyPrefix}templates/hybrid-licensing-main.template",
                        {
                            "S3Region": {
                                "Fn::If": [
                                    "GovCloudCondition",
                                    "s3-us-gov-west-1",
                                    "s3"
                                ]
                            }
                        }
                    ]
                },
                "TimeoutInMinutes": 30
            }
        }
    },
    "Metadata": {
        "AWS::CloudFormation::Interface": {
            "ParameterGroups": [{
                    "Label": {
                        "default": "Resource tagging configuration"
                    },
                    "Parameters": [
                        "ResourceTagPrefix",
                        "CustomIdentifier"
                    ]
                },
                {
                    "Label": {
                        "default": "Network configuration"
                    },
                    "Parameters": [
                        "AvailabilityZones",
                        "VpcCidr",
                        "PublicSubnet1Cidr",
                        "PublicSubnet2Cidr",
                        "PrivateSubnet1Cidr",
                        "PrivateSubnet2Cidr"
                    ]
                },
                {
                    "Label": {
                        "default": "FortiGate configuration"
                    },
                    "Parameters": [
                        "FortiGateInstanceType",
                        "FortiOSVersion",
                        "FortiGatePskSecret",
                        "FortiGateAdminPort",
                        "FortiGateAdminCidr",
                        "KeyPairName"
                    ]
                },
                {
                    "Label": {
                        "default": "FortiGate auto scaling group configuration"
                    },
                    "Parameters": [
                        "FgtAsgDesiredCapacityByol",
                        "FgtAsgMinSizeByol",
                        "FgtAsgMaxSizeByol",
                        "FgtAsgDesiredCapacityPayg",
                        "FgtAsgMinSizePayg",
                        "FgtAsgMaxSizePayg",
                        "FgtAsgScaleOutThreshold",
                        "FgtAsgScaleInThreshold",
                        "MasterElectionTimeout",
                        "GetLicenseGracePeriod",
                        "FgtAsgHealthCheckGracePeriod",
                        "FgtAsgCooldown",
                        "LifecycleHookTimeout"
                    ]
                },
                {
                    "Label": {
                        "default": "Load balancing configuration"
                    },
                    "Parameters": [
                        "LoadBalancingTrafficProtocol",
                        "LoadBalancingTrafficPort",
                        "LoadBalancingHealthCheckThreshold",
                        "InternalLoadBalancingOptions",
                        "InternalTargetGroupHealthCheckPath",
                        "InternalLoadBalancerDnsName"
                    ]
                },
                {
                    "Label": {
                        "default": "Failover management configuration"
                    },
                    "Parameters": [
                        "HeartBeatInterval",
                        "HeartBeatLossCount",
                        "HeartBeatDelayAllowance"
                    ]
                },
                {
                    "Label": {
                        "default": "Deployment resources configuration"
                    },
                    "Parameters": [
                        "S3BucketName",
                        "S3KeyPrefix"
                    ]
                }
            ],
            "ParameterLabels": {
                "ResourceTagPrefix": {
                    "default": "Resource tag prefix"
                },
                "CustomIdentifier": {
                    "default": "Resource name prefix"
                },
                "AvailabilityZones": {
                    "default": "Availability Zones"
                },
                "VpcCidr": {
                    "default": "VPC CIDR"
                },
                "PublicSubnet1Cidr": {
                    "default": "Autoscale subnet 1 CIDR"
                },
                "PublicSubnet2Cidr": {
                    "default": "Autoscale subnet 2 CIDR"
                },
                "PrivateSubnet1Cidr": {
                    "default": "Protected subnet 1 CIDR"
                },
                "PrivateSubnet2Cidr": {
                    "default": "Protected subnet 2 CIDR"
                },
                "FortiGateInstanceType": {
                    "default": "Instance type"
                },
                "FortiOSVersion": {
                    "default": "FortiOS version"
                },
                "S3BucketName": {
                    "default": "S3 bucket name"
                },
                "S3KeyPrefix": {
                    "default": "S3 key prefix"
                },
                "LifecycleHookTimeout": {
                    "default": "Instance lifecycle timeout"
                },
                "FgtAsgCooldown": {
                    "default": "Scaling cooldown period"
                },
                "FgtAsgDesiredCapacityByol": {
                    "default": "Desired capacity (BYOL)"
                },
                "FgtAsgMinSizeByol": {
                    "default": "Minimum group size (BYOL)"
                },
                "FgtAsgMaxSizeByol": {
                    "default": "Maximum group size (BYOL)"
                },
                "FgtAsgDesiredCapacityPayg": {
                    "default": "Desired capacity (PAYG)"
                },
                "FgtAsgMinSizePayg": {
                    "default": "Minimum group size (PAYG)"
                },
                "FgtAsgMaxSizePayg": {
                    "default": "Maximum group size (PAYG)"
                },
                "FgtAsgHealthCheckGracePeriod": {
                    "default": "Health check grace period"
                },
                "FgtAsgScaleInThreshold": {
                    "default": "Scale-in threshold"
                },
                "FgtAsgScaleOutThreshold": {
                    "default": "Scale-out threshold"
                },
                "FortiGateAdminPort": {
                    "default": "Admin port"
                },
                "FortiGateAdminCidr": {
                    "default": "Admin CIDR block"
                },
                "KeyPairName": {
                    "default": "Key pair name"
                },
                "FortiGatePskSecret": {
                    "default": "FortiGate PSK secret"
                },
                "HeartBeatInterval": {
                    "default": "Heart beat interval"
                },
                "HeartBeatLossCount": {
                    "default": "Heart beat loss count"
                },
                "HeartBeatDelayAllowance": {
                    "default": "Heart beat delay allowance"
                },
                "LoadBalancingTrafficProtocol": {
                    "default": "Traffic protocol"
                },
                "LoadBalancingTrafficPort": {
                    "default": "Traffic port"
                },
                "LoadBalancingHealthCheckThreshold": {
                    "default": "Health Check Threshold"
                },
                "InternalLoadBalancingOptions": {
                    "default": "Internal ELB options"
                },
                "InternalTargetGroupHealthCheckPath": {
                    "default": "Health check path"
                },
                "InternalLoadBalancerDnsName": {
                    "default": "Internal ELB DNS name"
                },
                "GetLicenseGracePeriod": {
                    "default": "Get license grace period"
                },
                "MasterElectionTimeout": {
                    "default": "Master election timeout"
                }
            }
        }
    },
    "Outputs": {
        "ResourceTagPrefix": {
            "Description": "The value for Tag ResourceGroup on all resources deployed in this stack.",
            "Value": {
                "Fn::If": [
                    "HasResourceTagPrefix",
                    {
                        "Fn::Join": [
                            "-",
                            [{
                                    "Ref": "ResourceTagPrefix"
                                },
                                {
                                    "Fn::Select": [
                                        0,
                                        {
                                            "Fn::Split": [
                                                "-",
                                                {
                                                    "Fn::Select": [
                                                        2,
                                                        {
                                                            "Fn::Split": [
                                                                "/",
                                                                {
                                                                    "Ref": "AWS::StackId"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            ]
                        ]
                    },
                    {
                        "Fn::Select": [
                            0,
                            {
                                "Fn::Split": [
                                    "-",
                                    {
                                        "Fn::Select": [
                                            2,
                                            {
                                                "Fn::Split": [
                                                    "/",
                                                    {
                                                        "Ref": "AWS::StackId"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        "CustomIdentifier": {
            "Description": "The custom identifier you specified. This is used as a resource name prefix on those resources that have strict naming requirement.",
            "Value": {
                "Ref": "CustomIdentifier"
            }
        },
        "UseLatestFortiOSVersion": {
            "Description": "The custom identifier you specified. This is used as a resource name prefix on those resources that have strict naming requirement.",
            "Value": {
                "Fn::If": [
                    "UseLatestFortiOSVersion",
                "yes Latest (6.0.5)",
                "no Latest (6.0.5)"
                ]
            }
        },
        "FortiOSVersion": {
            "Description": "The custom identifier you specified. This is used as a resource name prefix on those resources that have strict naming requirement.",
            "Value": {
                "Ref": "FortiOSVersion"
            }
        },
        "FortiOSVersion2": {
            "Description": "The custom identifier you specified. This is used as a resource name prefix on those resources that have strict naming requirement.",
            "Value": {
                "Fn::If": [
                    "UseLatestFortiOSVersion",
                    "LATEST",
                    {
                        "Fn::Join": [
                            "",
                            {
                                "Fn::Split": [
                                    ".",
                                    {
                                        "Fn::Select": [
                                            1,
                                            {
                                                "Fn::Split": [
                                                    " ",
                                                    {
                                                        "Ref": "FortiOSVersion"
                                                    }
                                                ]
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        },
        "UniqueID": {
            "Description": "A random string as a unique ID for all resources in this deployment stack and nested stacks.",
            "Value": {
                "Fn::Select": [
                    0,
                    {
                        "Fn::Split": [
                            "-",
                            {
                                "Fn::Select": [
                                    2,
                                    {
                                        "Fn::Split": [
                                            "/",
                                            {
                                                "Ref": "AWS::StackId"
                                            }
                                        ]
                                    }
                                ]
                            }
                        ]
                    }
                ]
            }
        }
    }
}
